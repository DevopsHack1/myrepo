name: POI (.NET) Build and Test

on:
  push:
    branches: [ main ]
    paths: apis/poi
  pull_request:
    branches: [ main ]
    paths: apis/poi
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: apis/poi
    - name: Build
      run: dotnet build --no-restore
      working-directory: apis/poi
    - name: Test
      run: dotnet test apis/poi/tests/UnitTests/UnitTests.csproj --no-build --verbosity normal
      
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ISSUE_TITLE: 'Issue auto created for POI build'
        GITHUB_ISSUE_BODY: 'Check your failed POI build'
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
        
  docker_push:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2
    - name: Docker Images Build And Push
    # You may pin to the exact commit or the version.
    # uses: risfeng/docker-image-build-push-action@cb2810d0b48aeef5fec933dee19b595319c80e1d
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_ENDPOINT }} # default: index.docker.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build apis/poi/web -t ${{ secrets.ACR_ENDPOINT }}/devopsoh/api-poi:${{github.run_number}}
        docker push ${{ secrets.ACR_ENDPOINT }}/devopsoh/api-poi:${{github.run_number}}
    
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md

  docker_deploy:
    needs: docker_push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: staging
      url: "https://openhackfc90kk36poi-staging.azurewebsites.net"
    steps:
    - uses: actions/checkout@v2
    - name: Docker Deployment
      uses: Azure/webapps-deploy@v2
      with:
        app-name: 'openhackfc90kk36poi'
        slot-name: 'staging'
        publish-profile: ${{ secrets.POI_AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        images: '${{ secrets.ACR_ENDPOINT }}/devopsoh/api-poi:${{github.run_number}}'
        
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
        
  check_status_staging:
    needs: docker_deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI Action
      uses: Azure/cli@1.0.4
      with:
        # Specify the script here
        inlineScript: |
          az webapp traffic-routing set --distribution staging=40 --name openhackfc90kk36poi --resource-group openhackfc90kk36rg
         
    - name: Check Staging Status
      # You may pin to the exact commit or the version.
      # uses: lakuapik/gh-actions-http-status@705c34b4307b8a0354a431b75bb5910b6562dd20
      uses: lakuapik/gh-actions-http-status@v1
      with:
        # List website urls in JSON (eg: ["http://github.com", "https://education.github.com"])
        sites: '["https://openhackfc90kk36poi-staging.azurewebsites.net/api/healthcheck/poi"]'
        # List expected HTTP status codes in JSON (eg: [301, 200])
        expected: '[200]'

    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
        
  swap_slot:
    needs: check_status_staging
    runs-on: ubuntu-latest    
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: "https://openhackfc90kk36poi.azurewebsites.net"
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI Action
      uses: Azure/cli@1.0.4
      with:
        # Specify the script here
        inlineScript: |
          # az webapp update -g openhackfc90kk36rg -n openhackfc90kk36poi --set tags.tagName=${{github.run_number}}
           az webapp deployment slot swap -g openhackfc90kk36rg -n openhackfc90kk36poi --slot staging --target-slot production
    
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
        
  check_status_prod:
    needs: swap_slot
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2    
    - name: Check Prod Status
      # You may pin to the exact commit or the version.
      # uses: lakuapik/gh-actions-http-status@705c34b4307b8a0354a431b75bb5910b6562dd20
      uses: lakuapik/gh-actions-http-status@v1
      with:
        # List website urls in JSON (eg: ["http://github.com", "https://education.github.com"])
        sites: '["https://openhackfc90kk36poi.azurewebsites.net/api/healthcheck/poi"]'
        # List expected HTTP status codes in JSON (eg: [301, 200])
        expected: '[200]'
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI Action
      uses: Azure/cli@1.0.4
      with:
        # Specify the script here
        inlineScript: |
          az webapp traffic-routing set --distribution staging=0 --name openhackfc90kk36poi --resource-group openhackfc90kk36rg     
        
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
        
  roll_back:
    needs: check_status_prod
    runs-on: ubuntu-latest    
    if: ${{ failure() }}
    environment:
      name: production
      url: "https://openhackfc90kk36poi.azurewebsites.net"
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure CLI Action
      uses: Azure/cli@1.0.4
      with:
        # Specify the script here
        inlineScript: |
          # az webapp update -g openhackfc90kk36rg -n openhackfc90kk36poi --set tags.tagName=${{github.run_number}}
          az webapp deployment slot swap -g openhackfc90kk36rg -n openhackfc90kk36poi --slot staging --target-slot production
          
    - name: Create An Issue
      if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2.6.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        filename: .github/ISSUE_TEMPLATE_chu.md
